name: Deploy to Production (Vercel)

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to deploy'
        required: true
        default: 'main'
        type: string

jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        node-version: [20]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10 # Specify pnpm version or remove for latest

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      # Pull Vercel project settings early
      - name: Pull Vercel Project Settings
        run: |
          npx vercel pull --yes --environment=production --token $VERCEL_TOKEN
          echo "Checking for .vercel/project.json:"
          ls -a .vercel/
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # Ensure necessary environment variables are available for migration if needed
      - name: Run database migrations
        run: pnpm run db:migrate
        env:
          POSTGRES_URL: ${{ secrets.POSTGRES_URL }}

      # Build the project using Vercel CLI
      - name: Build project
        run: npx vercel build --prod --token $VERCEL_TOKEN
        env:
          # Ensure all build-time secrets are here
          POSTGRES_URL: ${{ secrets.POSTGRES_URL }}
          STRIPE_API_KEY: ${{ secrets.STRIPE_API_KEY }}
          STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}
          AUTH_SECRET: ${{ secrets.AUTH_SECRET }}
          BASE_URL: ${{ secrets.BASE_URL }}
          GTM_ID: ${{ secrets.GTM_ID }}
          # Vercel secrets needed for build command context
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}

      # Deploy the prebuilt output
      - name: Deploy to Vercel
        run: npx vercel deploy --prebuilt --prod --token $VERCEL_TOKEN
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
